---
title: "4.1"
format: html
editor: visual
---

# 4.2 Visualizing Relationships

-   scatter plots
-   2D density plots

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                    setup                                 ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#..........................load packages.........................
library(metajam) 
library(tidyverse)

# #...................download data from DataOne...................
# download_d1_data("https://cn.dataone.org/cn/v2/resolve/https%3A%2F%2Fpasta.lternet.edu%2Fpackage%2Fdata%2Feml%2Fknb-lter-hbr%2F208%2F9%2F3b3cf7ea447cb875d7c7d68ebdfd24c7",
#                  path = here::here("week4")) 

#  ~ NOTE: I recommend renaming the downloaded folder to 'data/' so that it's ignored by .gitignore! ~

#....................read in downloaded files....................
stream_chem_all <- read_d1_files(here::here("week4", "data"))

#........................get the data file.......................
stream_chem_data <- stream_chem_all$data
```
 
 ## Scatter Plots
 
 The pH of surface water and topsoil may be lower in the presence of dissolved organic matter (e.g. see Erlandsson et al. 2010 & Zhou et al. 2019.)). To start, letâ€™s look at the effects of DOC on pH for just the most recent water year (2021):
 
```{r}
# basic scatterplot ----
stream_chem_data |> 
  filter(waterYr == 2021) |> 
  ggplot(aes(x = DOC, y = pH)) + 
  geom_point(alpha = 0.5)

# Rug plots add distribution marks along the x and y axes of your plot ----
stream_chem_data |> 
  filter(waterYr == 2021) |> 
  ggplot(aes(x = DOC, y = pH)) + 
  geom_point(alpha = 0.5) +
  geom_rug()

# marginal plots as an alternative to geom_rug() ----
p1 <- stream_chem_data |> 
  filter(waterYr == 2021) |> 
  ggplot(aes(x = DOC, y = pH)) + 
  geom_point(alpha = 0.5)
# histograms
ggExtra::ggMarginal(p1, type = "histogram")
# density
ggExtra::ggMarginal(p1, type = "density")
# boxplot only on x-axis
ggExtra::ggMarginal(p1, type = "boxplot", margins = "x")

# ggExtra multiple groups
p2 <- stream_chem_data |> 
  filter(waterYr == 2021) |> 
  ggplot(aes(x = DOC, y = pH, color = site)) + 
  geom_point(alpha = 0.5) +
  theme(legend.position = "bottom")

ggExtra::ggMarginal(p2, type = "density", groupFill = TRUE, groupColour = TRUE)
```
 
## Trend Lines

You may consider adding a best fit line to help you readers more easily identify trends in your data.

```{r}
# basic trend line
stream_chem_data |> 
  filter(waterYr == 2021) |> 
  filter(site == "W8") |> 
  ggplot(aes(x = DOC, y = pH)) + 
  geom_point(alpha = 0.5) +
  geom_smooth()

# line of best fit and remove CI
stream_chem_data |> 
  filter(waterYr == 2021) |> 
  filter(site == "W8") |> 
  ggplot(aes(x = DOC, y = pH)) + 
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = FALSE)
```

## Visualizing a Third Numeric Variable

### Bubble Chart

Use a bubble chart to represent this third numeric variable (Al) through the size of our scatter plot points.

```{r}
# basic bubble chart
stream_chem_data |> 
  filter(waterYr == 2021) |> 
  ggplot(aes(x = DOC, y = pH, color = site, size = Al_ICP)) + 
  geom_point(alpha = 0.5) +
  labs(x = "DOC (mg/L)", size = "Al (mg/L)", color = "Site")

# scale_size() adjusts the area range of the bubbles
stream_chem_data |> 
  filter(waterYr == 2021) |> 
  ggplot(aes(x = DOC, y = pH, color = site, size = Al_ICP)) + 
  geom_point(alpha = 0.5) +
  scale_size(range = c(1, 10)) +
  labs(x = "DOC (mg/L)", size = "Al (mg/L)", color = "Site")
```

Rather than mapping a third numeric variable to point size, consider if just creating two separate scatter plots may help to more effectively visualize the relationships

### Color

```{r}
# third variable by color
stream_chem_data |> 
  filter(waterYr == 2021) |> 
  ggplot(aes(x = DOC, y = pH, color = Al_ICP)) + 
  geom_point(alpha = 0.5, size = 2) +
  scale_color_viridis_c() +
  labs(x = "DOC (mg/L)", color = "Al (mg/L)")
```

## Overplotting Strategies

Sometimes, we just have too many data points for a traditional scatter plot to be effective. Scatter plots end up disguising trends.

```{r}
# basic overplotted scatter plot
ggplot(stream_chem_data, aes(x = SO4, y = pH)) + 
  geom_point()

# smaller points and or transparency
ggplot(stream_chem_data, aes(x = SO4, y = pH)) + 
  geom_point(size = 0.5, alpha = 0.3) 

# use a rug plot
ggplot(stream_chem_data, aes(x = SO4, y = pH)) + 
  geom_point(size = 0.5, alpha = 0.3) +
  geom_rug()

# color by group
ggplot(stream_chem_data, aes(x = SO4, y = pH, color = site)) + 
  geom_point(size = 0.5, alpha = 0.3) 
```

Alternatively, let's try a heatmap

```{r}
# heatmap of 2d bin counts
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
  geom_bin2d() +
  scale_fill_viridis_c()

# hexagonal heatmap of 2d bin counts
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
  geom_hex() +
  scale_fill_viridis_c()

# increase legend height for readability
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
  geom_hex() +
  scale_fill_viridis_c() + 
  guides(fill = guide_colourbar(title = "Count", 
                                barwidth = 1, barheight = 15))
```

Alternatively, let's try a density map, but these can be difficult to interpret

```{r}
# contours of a 2d density plot
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
  geom_density_2d() # include `aes(color = ..level..)` if you want to color contours by level of density

# filled in contours
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
  geom_density_2d_filled()
```

So let's try density a different way

These geoms similarly perform 2D density estimation, then compute and plot the resulting highest density regions (HDRs). These HDRs are computed to be the smallest such regions that bound that level of probability. By default, regions show the 50%, 80%, 95%, and 99% HDRs of the estimated density (though this can be updated using the probs argument).

```{r}
# contour lines
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
  ggdensity::geom_hdr_lines()

# filled contours
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
  ggdensity::geom_hdr()
```

